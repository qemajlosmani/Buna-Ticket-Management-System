// <auto-generated />
using System;
using Btms.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Btms.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Btms.Data.Entities.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("accept_terms")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("first_name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("language")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("last_name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("password")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("password_reset")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("reset_token")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("reset_token_expires")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("verification_token")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("verified")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Btms.Data.Entities.Account", b =>
                {
                    b.OwnsMany("Btms.Data.Entities.RefreshToken", "refresh_tokens", b1 =>
                        {
                            b1.Property<int>("id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<DateTime>("created")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("expires")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("reason_revoked")
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("replaced_by_token")
                                .HasMaxLength(250)
                                .HasColumnType("varchar(250)");

                            b1.Property<DateTime?>("revoked")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("token")
                                .HasMaxLength(250)
                                .HasColumnType("varchar(250)");

                            b1.Property<int>("userid")
                                .HasColumnType("int");

                            b1.HasKey("id");

                            b1.HasIndex("userid");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner("user")
                                .HasForeignKey("userid");

                            b1.Navigation("user");
                        });

                    b.Navigation("refresh_tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
